name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }} 

jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ${{ inputs.path-of-folder }}
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}       
  
        - name: Install Dependencies
          run: npm install
          shell: bash
        
        - name: Composite Action - Cache & Install NPM Packages
          uses: ./.github/custom-actions/npm-action
          with:
            path-of-folder: node_modules
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if:  always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    code-coverage:
      name: code-coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install Dependencies
        run: npm install

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5 
    docker:
        name: Containerization
        needs: [unit-testing, code-coverage]  # this job will run after the unit-testing and code-coverage jobs are completed successfully
        permissions:
          packages: write  # this job will have write access to the package registries

        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: GHCR Login
          uses: docker/login-action@v3.4.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Docker Build For Testing
          uses: docker/build-push-action@v6
          with:
            context: .  # context is the path to the Dockerfile. it can be a local path or a URL.
            push: false  # set to true if you want to push the image to Docker Hub
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }} 

        - name: Docker Push
          uses: docker/build-push-action@v6
          with:
            context: .  # context is the path to the Dockerfile. it can be a local path or a URL.
            push: true  # set to false if you don't want to push the image to Docker Hub
            tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}   
        
